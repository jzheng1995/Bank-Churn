reticulate::repl_python()
library(reticulate)
library(tidyverse)
library(kableExtra)
# tabulate python tables
pytable <- function(object, row = 0){
if(row == 0){
py[object] %>% kbl() %>%
kable_material_dark()
} else {
py[object] %>% head(row) %>% kbl() %>%
kable_material_dark()
}}
reticulate::repl_python()
colnames %>% pytable()
"colnames" %>% pytable()
reticulate::repl_python()
train.pivot_table(index=['CustomerId'], aggfunc='size')
reticulate::repl_python()
train = py$train
train %>% colnames()
train %>% group_by(id) %>% nrow()
train %>% group_by(id) %>% count()
train %>% group_by(id) %>% tally( )
train %>% group_by(id) %>% tally() %>% tally(n)
train %>% group_by(id) %>% n()
train %>% group_by(id) %>% tally()
train %>% group_by(id) %>% tally() %>% group_by(n) %>% tally()
train %>% group_by(id) %>% tally()
train %>% group_by(CustomerId) %>% tally()
train %>% group_by(CustomerId) %>% tally() %>% group_by(n) %>% tally()
train %>% describe()
train %>% sumary()
train %>% desc()
library(gtsummary)
train %>% tbl_summary()
library(psych)
train %>% dsecribe()
train %>% describe()
train
train %>% group_by(CustomerId) %>% tally()
entries_per_customer <- train %>% group_by(CustomerId) %>% tally()
train %>% group_by(CustomerId) %$% tally()
library(magrittr)
train %>% group_by(CustomerId) %$% tally()
(entries_per_customer <- train %>% group_by(CustomerId) %>% tally())
(entries_per_customer %>% group_by(n) %>% tally())
(entries_per_customer %>% group_by(n) %>% tally())
```{r, message = F}
(entries_per_customer %>% group_by(n) %>% tally())
entries_per_customer
entries_per_customer == 4
(entries_per_customer == 4)$CustomerId
(entries_per_customer == 4)["CustomerId"]
n_4 <- entries_per_customer == 4
train %>% filter(CustomerId %in% n_4$CustomerId)
n_4
n_4 <- entries_per_customer %>% filter(n == 4)
train %>% filter(CustomerId %in% n_4$CustomerId)
train %>% filter(CustomerId %in% n_4$CustomerId) %>% arrange(CustomerId)
reticulate::repl_python()
library(psych)
train %>% describe()
reticulate::repl_python()
